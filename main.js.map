{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["//Конфигурация пользователя\r\n\r\nconst config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-24\",\r\n  headers: {\r\n    authorization: \"f87b72dc-5092-4145-9f70-413b801514d3\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\n//Проверка ответа сервера и преобразование из json\r\n\r\nfunction getResponseData(res) {\r\n  if (!res.ok) {\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n  return res.json();\r\n}\r\n\r\n//Получение объекта с данными пользователя\r\n\r\nexport const getProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n//Получение массива карточек\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n//Редактирование профиля\r\n\r\nexport const changeNameJob = (name, about) => {\r\n  return fetch(`${config.baseUrl}/users/me `, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: `${name}`,\r\n      about: `${about}`,\r\n    }),\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n// Добавление новой карточки\r\n\r\nexport const postNewCard = (name, link) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: `${name}`,\r\n      link: `${link}`,\r\n    }),\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n// Удаление карточки\r\n\r\nexport const deleteCardApi = (id) => {\r\n  return fetch(`${config.baseUrl}/cards/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then((res) => getResponseData(res))\r\n  .then((data) => {\r\n    console.log(data.message);\r\n  });\r\n};\r\n\r\n// Добавление лайка\r\n\r\nexport const likeCardApi = (id) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    method: \"PUT\",\r\n    headers: config.headers,\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n// Удаление лайка\r\n\r\nexport const deleteLike = (id) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n//Смена Аватара\r\n\r\nexport const changeAvatarPatch = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: `${avatar}`,\r\n    }),\r\n  }).then((res) => getResponseData(res));\r\n};\r\n","export { createCard, deleteCard, likeCard };\r\nimport { likeCardApi, deleteLike, deleteCardApi } from \"./api.js\";\r\n\r\n// @todo: Темплейт карточки\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\n// @todo: Функция создания карточки\r\n\r\nfunction createCard(\r\n  cardData,\r\n  idProfile,\r\n  functionCard,\r\n  openModal,\r\n  popupDeleteCard,\r\n  deleteCardCb\r\n) {\r\n  const newCard = cardTemplate.querySelector(\".card\").cloneNode(true),\r\n    cardImage = newCard.querySelector(\".card__image\"),\r\n    cardDeleteButton = newCard.querySelector(\".card__delete-button\"),\r\n    cardLikeButton = newCard.querySelector(\".card__like-button\"),\r\n    likeCount = newCard.querySelector(\".card__like-count\"),\r\n    idCard = cardData._id;\r\n\r\n  newCard.querySelector(\".card__title\").textContent = cardData.name;\r\n  likeCount.textContent = cardData.likes.length;\r\n  cardImage.alt = cardData.name;\r\n  cardImage.src = cardData.link;\r\n\r\n  if (cardData.owner._id == idProfile) {\r\n    function createDeleteCard() {\r\n      deleteCardApi(idCard)\r\n      .catch((err) => {\r\n        console.log(\"Ошибка. Карточка не удалена\");\r\n      });\r\n      functionCard.deleteCard(newCard);\r\n    }\r\n\r\n    cardDeleteButton.addEventListener(\"click\", () => {\r\n      deleteCardCb(createDeleteCard);\r\n\r\n      openModal(popupDeleteCard);\r\n    });\r\n  } else {\r\n    cardDeleteButton.remove();\r\n  }\r\n\r\n  cardData.likes.forEach((element) => {\r\n    if (element._id == idProfile) {\r\n      cardLikeButton.classList.add(\"card__like-button_is-active\");\r\n    }\r\n  });\r\n\r\n  cardImage.addEventListener(\"click\", () => {\r\n    functionCard.openCard(cardData.link, cardData.name);\r\n  });\r\n\r\n  cardLikeButton.addEventListener(\"click\", () => {\r\n    functionCard.likeCard(event, cardData._id, likeCount);\r\n  });\r\n\r\n  return newCard;\r\n}\r\n\r\n// @todo: Функция удаления карточки\r\n\r\nconst deleteCard = (card) => {\r\n  card.remove();\r\n};\r\n\r\n// @todo: Функция лайка карточки\r\n\r\nconst likeCard = (event, idCard, likeCount) => {\r\n  const target = event.target;\r\n\r\n  if (target.classList.contains(\"card__like-button_is-active\")) {\r\n    deleteLike(idCard)\r\n      .then((data) => {\r\n        likeCount.textContent = data.likes.length;\r\n        event.target.classList.remove(\"card__like-button_is-active\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка. Лайк не удален\");\r\n      });\r\n  } else {\r\n    likeCardApi(idCard)\r\n      .then((data) => {\r\n        likeCount.textContent = data.likes.length;\r\n        event.target.classList.add(\"card__like-button_is-active\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка. Лайк не поставлен\");\r\n      });\r\n  }\r\n};\r\n","export { openModal, closeModal };\r\n\r\n// @todo: Функция открытия модального окна\r\nconst openModal = (elem) => {\r\n  elem.classList.add(\"popup_is-opened\");\r\n\r\n  // обработчик события нажатия Esc\r\n  document.addEventListener(\"keydown\", closeEsc);\r\n};\r\n\r\n// @todo: Функция закрытия модального окна\r\nconst closeModal = (elem) => {\r\n  elem.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closeEsc);\r\n};\r\n\r\n// @todo: Функция закрытия модального Esc\r\nfunction closeEsc(event) {\r\n  if (event.key === \"Escape\") {\r\n    const openModal = document.querySelector(\".popup_is-opened\");\r\n    closeModal(openModal);\r\n  }\r\n}\r\n","export { enableValidation, clearValidation };\r\n\r\n// enableValidation({\r\n//   formSelector: '.popup__form',\r\n//   inputSelector: '.popup__input',\r\n//   submitButtonSelector: '.popup__button',\r\n//   inactiveButtonClass: 'popup__button_disabled',\r\n//   inputErrorClass: 'popup__input_type_error',\r\n//   errorClass: 'popup__error_visible' ,\r\n// });\r\n\r\n//Показать ошибку ввода\r\nconst showInputError = (\r\n  formElement,\r\n  inputElement,\r\n  errorMessage,\r\n  inputErrorClass,\r\n  errorClass\r\n) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(`${errorClass}_active`);\r\n};\r\n\r\n//Скрыть ошибку ввода\r\n\r\nconst hideInputError = (\r\n  formElement,\r\n  inputElement,\r\n  inputErrorClass,\r\n  errorClass\r\n) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(inputErrorClass);\r\n  errorElement.classList.remove(`.${errorClass}_active`);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\n//Изменение кнопки в зависимости валидности\r\n\r\nconst toggleButtonState = (inputList, buttonElement) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.disabled = false;\r\n  }\r\n};\r\n\r\n//Проверка на валидность нескольких полей\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n//Проверка на валидность  полей\r\n\r\nconst checkInputValidity = (\r\n  formElement,\r\n  inputElement,\r\n  inputErrorClass,\r\n  errorClass\r\n) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.dataset.errorPattern,\r\n      inputErrorClass,\r\n      errorClass\r\n    );\r\n  } else if (!inputElement.validity.valid) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      inputErrorClass,\r\n      errorClass\r\n    );\r\n  } else {\r\n    hideInputError(formElement, inputElement, inputErrorClass, errorClass);\r\n  }\r\n};\r\n\r\nfunction enableValidation(obj) {\r\n  //Установка прослушивателей событий\r\n  const setEventListeners = (formElement) => {\r\n    const inputList = Array.from(\r\n      formElement.querySelectorAll(obj.inputSelector)\r\n    );\r\n\r\n    const buttonElement = formElement.querySelector(obj.submitButtonSelector);\r\n\r\n    toggleButtonState(inputList, buttonElement);\r\n\r\n    inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener(\"input\", function () {\r\n        checkInputValidity(\r\n          formElement,\r\n          inputElement,\r\n          obj.inputErrorClass,\r\n          obj.errorClass\r\n        );\r\n        toggleButtonState(inputList, buttonElement);\r\n      });\r\n    });\r\n  };\r\n\r\n  const formList = Array.from(document.querySelectorAll(obj.formSelector));\r\n\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement);\r\n  });\r\n}\r\n\r\n// очистка ошибок валидации вызовом clearValidation\r\n\r\nfunction clearValidation(formElement, obj) {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(`.${obj.inputErrorClass}`)\r\n  );\r\n  const buttonElement = formElement.querySelector(obj.submitButtonSelector);\r\n\r\n  toggleButtonState(inputList, buttonElement);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(\r\n      formElement,\r\n      inputElement,\r\n      obj.inputErrorClass,\r\n      obj.errorClass\r\n    );\r\n  });\r\n}\r\n","import \"./index.css\";\r\nimport { createCard, deleteCard, likeCard } from \"./components/card.js\";\r\nimport { openModal, closeModal } from \"./components/modal.js\";\r\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\r\nimport {\r\n  getProfile,\r\n  getInitialCards,\r\n  changeNameJob,\r\n  postNewCard,\r\n  changeAvatarPatch,\r\n  deleteCardApi,\r\n} from \"./components/api.js\";\r\n\r\nlet idProfile;\r\n\r\n//функция удаления нужной карточки\r\nlet handleSubmitConfirmPopup = function () {};\r\n\r\nlet deleteCardCb = function (assignedFunction) {\r\n  handleSubmitConfirmPopup = assignedFunction;\r\n};\r\n\r\n//Конфигурция валидации\r\n\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n// включение валидации вызовом enableValidation\r\n\r\nenableValidation(validationConfig);\r\n\r\n// @todo: DOM узлы\r\nconst content = document.querySelector(\".page\"),\r\n  cardContainer = content.querySelector(\".places__list\"),\r\n  forms = document.forms,\r\n  popupImage = content.querySelector(\".popup_type_image\"),\r\n  imagePopup = popupImage.querySelector(\".popup__image\"),\r\n  imageCaption = popupImage.querySelector(\".popup__caption\"),\r\n  changeAvatarPopup = content.querySelector(\".popup_type_change-avatar\"),\r\n  editProfilePopup = content.querySelector(\".popup_type_edit\"),\r\n  profileTitle = content.querySelector(\".profile__title\"),\r\n  profileImage = content.querySelector(\".profile__image\"),\r\n  profileDescription = content.querySelector(\".profile__description\"),\r\n  formChangeAvatar = forms[\"change-avatar\"],\r\n  changeAvatarUrl = formChangeAvatar.querySelector(\r\n    \".popup__input_type_avatar_url\"\r\n  ),\r\n  formChangeAvatarButton = formChangeAvatar.querySelector(\".popup__button\"),\r\n  profilEditButton = content.querySelector(\".profile__edit-button\"),\r\n  formEditProfile = forms[\"edit-profile\"],\r\n  nameInput = formEditProfile.querySelector(\".popup__input_type_name\"),\r\n  jobInput = formEditProfile.querySelector(\".popup__input_type_description\"),\r\n  formEditProfileButton = formEditProfile.querySelector(\".popup__button\"),\r\n  popupDeleteCard = content.querySelector(\".popup_type_delete-card\");\r\n\r\n// @todo: Функция открытия изображения карточки\r\nconst openCard = (cardLink, cardCaption) => {\r\n  imagePopup.src = cardLink;\r\n  imagePopup.alt = cardCaption;\r\n  imageCaption.textContent = cardCaption;\r\n  openModal(popupImage);\r\n};\r\n\r\n// @todo: Функция загрузки профиля\r\n\r\nfunction renderProfile(obj) {\r\n  profileTitle.textContent = obj.name;\r\n  profileDescription.textContent = obj.about;\r\n  profileImage.style.backgroundImage = `url(${obj.avatar})`;\r\n  idProfile = obj._id;\r\n}\r\n\r\n// Все функции арточки\r\nconst functionCard = {\r\n  deleteCard,\r\n  openCard,\r\n  likeCard,\r\n  deleteCardCb,\r\n};\r\n\r\n// @todo: Функция вывода все карточки на страницу\r\nfunction renderCards(array) {\r\n  array.forEach((obj) => {\r\n    cardContainer.append(\r\n      createCard(\r\n        obj,\r\n        idProfile,\r\n        functionCard,\r\n        openModal,\r\n        popupDeleteCard,\r\n        deleteCardCb\r\n      )\r\n    );\r\n  });\r\n}\r\n\r\n//Вывод с сервера данных пользователя и карточки\r\n\r\nPromise.all([getProfile(), getInitialCards()])\r\n  .then(([profileObj, initialCards]) => {\r\n    renderProfile(profileObj);\r\n    renderCards(initialCards);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n\r\n// Редактирование профиля\r\n\r\nprofilEditButton.addEventListener(\"click\", () => {\r\n  openModal(editProfilePopup);\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDescription.textContent;\r\n  clearValidation(formEditProfile, validationConfig);\r\n});\r\n\r\nformEditProfile.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  renderLoading(true, formEditProfileButton);\r\n  changeNameJob(nameInput.value, jobInput.value)\r\n    .then((data) => {\r\n      profileTitle.textContent = data.name;\r\n      profileDescription.textContent = data.about;\r\n      closeModal(editProfilePopup);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Профиль не обновлен.\");\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formEditProfileButton);\r\n    });\r\n});\r\n\r\n//Смена аватара\r\n\r\nprofileImage.addEventListener(\"click\", () => {\r\n  openModal(changeAvatarPopup);\r\n});\r\n\r\nformChangeAvatar.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  renderLoading(true, formChangeAvatarButton);\r\n  changeAvatarPatch(changeAvatarUrl.value)\r\n    .then((data) => {\r\n      profileImage.style.backgroundImage = `url(${data.avatar})`;\r\n      formChangeAvatar.reset();\r\n      closeModal(changeAvatarPopup);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Аватар не обновлен.\");\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formChangeAvatarButton);\r\n    });\r\n});\r\n\r\n// Добавление новой карточки\r\n\r\nconst newCardPopup = content.querySelector(\".popup_type_new-card\"),\r\n  formNewCard = forms[\"new-place\"],\r\n  cardName = formNewCard.querySelector(\".popup__input_type_card-name\"),\r\n  cardUrl = formNewCard.querySelector(\".popup__input_type_url\"),\r\n  formNewCardButton = formNewCard.querySelector(\".popup__button\");\r\n\r\ncontent.querySelector(\".profile__add-button\").addEventListener(\"click\", () => {\r\n  openModal(newCardPopup);\r\n});\r\n\r\nformNewCard.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  renderLoading(true, formNewCardButton);\r\n  postNewCard(cardName.value, cardUrl.value)\r\n    .then((data) => {\r\n      cardContainer.prepend(\r\n        createCard(\r\n          data,\r\n          idProfile,\r\n          functionCard,\r\n          openModal,\r\n          popupDeleteCard,\r\n          deleteCardCb\r\n        )\r\n      );\r\n      closeModal(newCardPopup);\r\n      formNewCard.reset();\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Карточка не добавлена\");\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formNewCardButton);\r\n    });\r\n});\r\n\r\n//Подтверждение удаления карточки\r\n\r\nconst confirmationDeleteCard = forms[\"delete-card\"];\r\nconfirmationDeleteCard.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  handleSubmitConfirmPopup();\r\n  closeModal(popupDeleteCard);\r\n});\r\n\r\n// Обработчики клика закрытия модального по крестику и по оверлею\r\n\r\nconst popups = document.querySelectorAll(\".popup\");\r\npopups.forEach((popup) => {\r\n  popup.addEventListener(\"click\", (evt) => {\r\n    if (\r\n      evt.target === evt.currentTarget ||\r\n      evt.target.classList.contains(\"popup__close\")\r\n    ) {\r\n      closeModal(popup);\r\n    }\r\n  });\r\n});\r\n\r\n//Функция загрузки Сохранение...\r\n\r\nfunction renderLoading(isLoading, buttonElement) {\r\n  if (isLoading) {\r\n    buttonElement.textContent = \"Сохранение...\";\r\n  } else {\r\n    buttonElement.textContent = \"Сохранить\";\r\n  }\r\n}\r\n"],"names":["config","baseUrl","headers","authorization","getResponseData","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","cardData","idProfile","functionCard","openModal","popupDeleteCard","deleteCardCb","newCard","cloneNode","cardImage","cardDeleteButton","cardLikeButton","likeCount","idCard","_id","textContent","name","likes","length","alt","src","link","owner","createDeleteCard","id","fetch","method","then","data","console","log","message","catch","err","deleteCard","addEventListener","remove","forEach","element","classList","add","openCard","likeCard","event","elem","closeEsc","closeModal","removeEventListener","key","showInputError","formElement","inputElement","errorMessage","inputErrorClass","errorClass","errorElement","hideInputError","toggleButtonState","inputList","buttonElement","hasInvalidInput","disabled","some","validity","valid","obj","setEventListeners","handleSubmitConfirmPopup","assignedFunction","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","Array","from","querySelectorAll","patternMismatch","dataset","errorPattern","validationMessage","checkInputValidity","cardContainer","forms","popupImage","imagePopup","imageCaption","changeAvatarPopup","editProfilePopup","profileTitle","profileImage","profileDescription","formChangeAvatar","changeAvatarUrl","formChangeAvatarButton","profilEditButton","formEditProfile","nameInput","jobInput","formEditProfileButton","card","cardLink","cardCaption","target","contains","likeCardApi","all","_ref","_ref2","profileObj","initialCards","about","style","backgroundImage","avatar","renderProfile","append","value","clearValidation","evt","preventDefault","renderLoading","body","JSON","stringify","finally","reset","newCardPopup","formNewCard","cardName","cardUrl","formNewCardButton","isLoading","prepend","popup","currentTarget"],"sourceRoot":""}
{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["//Конфигурация пользователя\r\n\r\nconst config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-24\",\r\n  headers: {\r\n    authorization: \"f87b72dc-5092-4145-9f70-413b801514d3\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\n//Проверка ответа сервера и преобразование из json\r\n\r\nfunction getResponseData(res) {\r\n  if (!res.ok) {\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n  return res.json();\r\n}\r\n\r\n//Получение объекта с данными пользователя\r\n\r\nexport const getProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n//Получение массива карточек\r\n\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n//Редактирование профиля\r\n\r\nexport const changeNameJob = (name, about) => {\r\n  return fetch(`${config.baseUrl}/users/me `, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: `${name}`,\r\n      about: `${about}`,\r\n    }),\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n// Добавление новой карточки\r\n\r\nexport const postNewCard = (name, link) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: `${name}`,\r\n      link: `${link}`,\r\n    }),\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n// Удаление карточки\r\n\r\nexport const deleteCardApi = (id) => {\r\n  return fetch(`${config.baseUrl}/cards/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then((res) => getResponseData(res))\r\n  .then((data) => {\r\n    console.log(data.message);\r\n  });\r\n};\r\n\r\n// Добавление лайка\r\n\r\nexport const likeCardApi = (id) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    method: \"PUT\",\r\n    headers: config.headers,\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n// Удаление лайка\r\n\r\nexport const deleteLike = (id) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then((res) => getResponseData(res));\r\n};\r\n\r\n//Смена Аватара\r\n\r\nexport const changeAvatarPatch = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: `${avatar}`,\r\n    }),\r\n  }).then((res) => getResponseData(res));\r\n};\r\n","export { createCard, deleteCard, likeCard };\r\nimport { likeCardApi, deleteLike, deleteCardApi } from \"./api.js\";\r\n\r\n// @todo: Темплейт карточки\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\n// @todo: Функция создания карточки\r\n\r\nfunction createCard(\r\n  cardData,\r\n  functionCard,\r\n  idProfile,\r\n  deleteCardCb\r\n) {\r\n  const newCard = cardTemplate.querySelector(\".card\").cloneNode(true),\r\n    cardImage = newCard.querySelector(\".card__image\"),\r\n    cardDeleteButton = newCard.querySelector(\".card__delete-button\"),\r\n    cardLikeButton = newCard.querySelector(\".card__like-button\"),\r\n    likeCount = newCard.querySelector(\".card__like-count\"),\r\n    idCard = cardData.idCard;\r\n\r\n  newCard.querySelector(\".card__title\").textContent = cardData.name;\r\n  likeCount.textContent = cardData.likes.length;\r\n  cardImage.alt = cardData.name;\r\n  cardImage.src = cardData.link;\r\n\r\n  if (cardData.id == idProfile) {\r\n\r\n    function createDeleteCard() {\r\n        deleteCardApi(idCard);\r\n        functionCard.deleteCard(newCard);\r\n    }\r\n\r\n    cardDeleteButton.addEventListener(\"click\", () => {\r\n      deleteCardCb(createDeleteCard);\r\n\r\n      document\r\n        .querySelector(\".popup_type_delete-card\")\r\n        .classList.add(\"popup_is-opened\");\r\n    });\r\n  } else {\r\n    cardDeleteButton.remove();\r\n  }\r\n\r\n  cardData.likes.forEach((element) => {\r\n    if (element._id == idProfile) {\r\n      cardLikeButton.classList.add(\"card__like-button_is-active\");\r\n    }\r\n  });\r\n\r\n  cardImage.addEventListener(\"click\", () => {\r\n    functionCard.openCard(cardData.link, cardData.name);\r\n  });\r\n\r\n  cardLikeButton.addEventListener(\"click\", () => {\r\n    functionCard.likeCard(event, cardData.idCard, likeCount);\r\n  });\r\n\r\n  return newCard;\r\n}\r\n\r\n// @todo: Функция удаления карточки\r\n\r\nconst deleteCard = (card) => {\r\n  card.remove();\r\n};\r\n\r\n// @todo: Функция лайка карточки\r\n\r\nconst likeCard = (event, idCard, likeCount) => {\r\n  const target = event.target;\r\n\r\n  if (target.classList.contains(\"card__like-button_is-active\")) {\r\n    deleteLike(idCard)\r\n      .then((data) => {\r\n        likeCount.textContent = data.likes.length;\r\n        event.target.classList.remove(\"card__like-button_is-active\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка. Лайк не удален\");\r\n      });\r\n  } else {\r\n    likeCardApi(idCard)\r\n      .then((data) => {\r\n        likeCount.textContent = data.likes.length;\r\n        event.target.classList.add(\"card__like-button_is-active\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Ошибка. Лайк не поставлен\");\r\n      });\r\n  }\r\n};\r\n","export { openModal, closeModal };\r\n\r\n// @todo: Функция открытия модального окна\r\nconst openModal = (elem) => {\r\n  elem.classList.add(\"popup_is-opened\");\r\n\r\n  // обработчик события нажатия Esc\r\n  document.addEventListener(\"keydown\", closeEsc);\r\n};\r\n\r\n// @todo: Функция закрытия модального окна\r\nconst closeModal = (elem) => {\r\n  elem.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closeEsc);\r\n};\r\n\r\n// @todo: Функция закрытия модального Esc\r\nfunction closeEsc(event) {\r\n  if (event.key === \"Escape\") {\r\n    const openModal = document.querySelector(\".popup_is-opened\");\r\n    closeModal(openModal);\r\n  }\r\n}\r\n","export { enableValidation, clearValidation };\r\n\r\n// enableValidation({\r\n//   formSelector: '.popup__form',\r\n//   inputSelector: '.popup__input',\r\n//   submitButtonSelector: '.popup__button',\r\n//   inactiveButtonClass: 'popup__button_disabled',\r\n//   inputErrorClass: 'popup__input_type_error',\r\n//   errorClass: 'popup__error_visible' ,\r\n// });\r\n\r\n//Показать ошибку ввода\r\nconst showInputError = (\r\n  formElement,\r\n  inputElement,\r\n  errorMessage,\r\n  inputErrorClass,\r\n  errorClass\r\n) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(`${errorClass}_active`);\r\n};\r\n\r\n//Скрыть ошибку ввода\r\n\r\nconst hideInputError = (\r\n  formElement,\r\n  inputElement,\r\n  inputErrorClass,\r\n  errorClass\r\n) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(inputErrorClass);\r\n  errorElement.classList.remove(`.${errorClass}_active`);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\n//Изменение кнопки в зависимости валидности\r\n\r\nconst toggleButtonState = (inputList, buttonElement) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.disabled = false;\r\n  }\r\n};\r\n\r\n//Проверка на валидность нескольких полей\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n//Проверка на валидность  полей\r\n\r\nconst checkInputValidity = (\r\n  formElement,\r\n  inputElement,\r\n  inputErrorClass,\r\n  errorClass\r\n) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.dataset.errorPattern,\r\n      inputErrorClass,\r\n      errorClass\r\n    );\r\n  } else if (!inputElement.validity.valid) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      inputErrorClass,\r\n      errorClass\r\n    );\r\n  } else if (!inputElement.value) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.dataset.errorMessage,\r\n      inputErrorClass,\r\n      errorClass\r\n    );\r\n  } else {\r\n    hideInputError(formElement, inputElement, inputErrorClass, errorClass);\r\n  }\r\n};\r\n\r\nfunction enableValidation(obj) {\r\n  //Установка прослушивателей событий\r\n  const setEventListeners = (formElement) => {\r\n    const inputList = Array.from(\r\n      formElement.querySelectorAll(obj.inputSelector)\r\n    );\r\n\r\n    const buttonElement = formElement.querySelector(obj.submitButtonSelector);\r\n\r\n    toggleButtonState(inputList, buttonElement);\r\n\r\n    inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener(\"input\", function () {\r\n        checkInputValidity(\r\n          formElement,\r\n          inputElement,\r\n          obj.inputErrorClass,\r\n          obj.errorClass\r\n        );\r\n        toggleButtonState(inputList, buttonElement);\r\n      });\r\n    });\r\n  };\r\n\r\n  const formList = Array.from(document.querySelectorAll(obj.formSelector));\r\n\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement);\r\n  });\r\n}\r\n\r\n// очистка ошибок валидации вызовом clearValidation\r\n\r\nfunction clearValidation(formElement, obj) {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(`.${obj.inputErrorClass}`)\r\n  );\r\n  const errorList = Array.from(\r\n    formElement.querySelectorAll(`.${obj.errorClass}_active`)\r\n  );\r\n\r\n  const buttonElement = formElement.querySelector(obj.submitButtonSelector);\r\n\r\n  toggleButtonState(inputList, buttonElement);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    checkInputValidity(\r\n      formElement,\r\n      inputElement,\r\n      obj.inputErrorClass,\r\n      obj.errorClass\r\n    );\r\n  });\r\n}\r\n","import \"./index.css\";\r\nimport { createCard, deleteCard, likeCard } from \"./components/card.js\";\r\nimport { openModal, closeModal } from \"./components/modal.js\";\r\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\r\nimport {\r\n  getProfile,\r\n  getInitialCards,\r\n  changeNameJob,\r\n  postNewCard,\r\n  changeAvatarPatch,\r\n  deleteCardApi,\r\n} from \"./components/api.js\";\r\n\r\nlet idProfile;\r\n\r\n//функция удаления нужной карточки\r\nlet handleSubmitConfirmPopup = function () {};\r\n\r\nlet deleteCardCb = function (a) {\r\n  handleSubmitConfirmPopup = a;\r\n};\r\n\r\n//Конфигурция валидации\r\n\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__error_visible\",\r\n};\r\n// включение валидации вызовом enableValidation\r\n\r\nenableValidation(validationConfig);\r\n\r\n// @todo: DOM узлы\r\nconst content = document.querySelector(\".page\"),\r\n  cardContainer = content.querySelector(\".places__list\"),\r\n  forms = document.forms,\r\n  popupImage = content.querySelector(\".popup_type_image\"),\r\n  imagePopup = popupImage.querySelector(\".popup__image\"),\r\n  imageCaption = popupImage.querySelector(\".popup__caption\"),\r\n  changeAvatarPopup = content.querySelector(\".popup_type_change-avatar\"),\r\n  editProfilePopup = content.querySelector(\".popup_type_edit\"),\r\n  profileTitle = content.querySelector(\".profile__title\"),\r\n  profileImage = content.querySelector(\".profile__image\"),\r\n  profileDescription = content.querySelector(\".profile__description\"),\r\n  formChangeAvatar = forms[\"change-avatar\"],\r\n  changeAvatarUrl = formChangeAvatar.querySelector(\r\n    \".popup__input_type_avatar_url\"\r\n  ),\r\n  formChangeAvatarButton = formChangeAvatar.querySelector(\".popup__button\"),\r\n  profilEditButton = content.querySelector(\".profile__edit-button\"),\r\n  formEditProfile = forms[\"edit-profile\"],\r\n  nameInput = formEditProfile.querySelector(\".popup__input_type_name\"),\r\n  jobInput = formEditProfile.querySelector(\".popup__input_type_description\"),\r\n  formEditProfileButton = formEditProfile.querySelector(\".popup__button\"),\r\n  popupDeleteCard = content.querySelector(\".popup_type_delete-card\");\r\n\r\n// @todo: Функция открытия изображения карточки\r\nconst openCard = (cardLink, cardCaption) => {\r\n  imagePopup.src = cardLink;\r\n  imagePopup.alt = cardCaption;\r\n  imageCaption.textContent = cardCaption;\r\n  openModal(popupImage);\r\n};\r\n\r\n// @todo: Функция загрузки профиля\r\n\r\nfunction renderProfile(obj) {\r\n  profileTitle.textContent = obj.name;\r\n  profileDescription.textContent = obj.about;\r\n  profileImage.style.backgroundImage = `url(${obj.avatar})`;\r\n  idProfile = obj._id;\r\n}\r\n\r\n// @todo: Функция вывода все карточки на страницу\r\n\r\nconst functionCard = {\r\n  deleteCard,\r\n  openCard,\r\n  likeCard,\r\n};\r\n\r\nfunction renderCards(array) {\r\n  array.forEach((obj) => {\r\n    cardContainer.append(\r\n      createCard(\r\n        {\r\n          name: obj.name,\r\n          link: obj.link,\r\n          likes: obj.likes,\r\n          id: obj.owner._id,\r\n          idCard: obj._id,\r\n        },\r\n        functionCard,\r\n        idProfile,\r\n        deleteCardCb\r\n      )\r\n    );\r\n  });\r\n}\r\n\r\n//Вывод с сервера данных пользователя и карточки\r\n\r\nPromise.all([getProfile(), getInitialCards()])\r\n  .then(([profileObj, initialCards]) => {\r\n    renderProfile(profileObj);\r\n    renderCards(initialCards);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n\r\n// Редактирование профиля\r\n\r\nprofilEditButton.addEventListener(\"click\", () => {\r\n  openModal(editProfilePopup);\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDescription.textContent;\r\n  clearValidation(formEditProfile, validationConfig);\r\n});\r\n\r\nformEditProfile.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  renderLoading(true, formEditProfileButton);\r\n  changeNameJob(nameInput.value, jobInput.value)\r\n    .then((data) => {\r\n      profileTitle.textContent = data.name;\r\n      profileDescription.textContent = data.about;\r\n    })\r\n    .then(() => {\r\n      closeModal(editProfilePopup);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Профиль не обновлен.\");\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formEditProfileButton);\r\n    });\r\n});\r\n\r\n//Смена аватара\r\n\r\nprofileImage.addEventListener(\"click\", () => {\r\n  openModal(changeAvatarPopup);\r\n});\r\n\r\nformChangeAvatar.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  renderLoading(true, formChangeAvatarButton);\r\n  changeAvatarPatch(changeAvatarUrl.value)\r\n    .then((data) => {\r\n      profileImage.style.backgroundImage = `url(${data.avatar})`;\r\n    })\r\n    .then(() => {\r\n      formChangeAvatar.reset();\r\n      closeModal(changeAvatarPopup);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Аватар не обновлен.\");\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formChangeAvatarButton);\r\n    });\r\n});\r\n\r\n// Добавление новой карточки\r\n\r\nconst newCardPopup = content.querySelector(\".popup_type_new-card\"),\r\n  formNewCard = forms[\"new-place\"],\r\n  cardName = formNewCard.querySelector(\".popup__input_type_card-name\"),\r\n  cardUrl = formNewCard.querySelector(\".popup__input_type_url\"),\r\n  formNewCardButton = formNewCard.querySelector(\".popup__button\");\r\n\r\ncontent.querySelector(\".profile__add-button\").addEventListener(\"click\", () => {\r\n  openModal(newCardPopup);\r\n});\r\n\r\nformNewCard.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  renderLoading(true, formNewCardButton);\r\n  postNewCard(cardName.value, cardUrl.value)\r\n    .then((data) => {\r\n      cardContainer.prepend(\r\n        createCard(\r\n          {\r\n            name: data.name,\r\n            link: data.link,\r\n            likes: data.likes,\r\n            id: data.owner._id,\r\n            idCard: data._id,\r\n          },\r\n          functionCard,\r\n          idProfile,\r\n          deleteCardCb\r\n        )\r\n      );\r\n    })\r\n    .then(() => {\r\n      closeModal(newCardPopup);\r\n      formNewCard.reset();\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Карточка не добавлена\");\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false, formNewCardButton);\r\n    });\r\n});\r\n\r\n//Подтверждение удаления карточки\r\n\r\nconst confirmationDeleteCard = forms[\"delete-card\"];\r\nconfirmationDeleteCard.addEventListener(\"submit\", (evt) => {\r\n  evt.preventDefault();\r\n  handleSubmitConfirmPopup();\r\n  closeModal(popupDeleteCard);\r\n});\r\n\r\n// Обработчики клика закрытия модального по крестику и по оверлею\r\n\r\nconst popups = document.querySelectorAll(\".popup\");\r\npopups.forEach((popup) => {\r\n  popup.addEventListener(\"click\", (evt) => {\r\n    if (\r\n      evt.target === evt.currentTarget ||\r\n      evt.target.classList.contains(\"popup__close\")\r\n    ) {\r\n      closeModal(popup);\r\n    }\r\n  });\r\n});\r\n\r\n//Функция загрузки Сохранение...\r\n\r\nfunction renderLoading(isLoading, buttonElement) {\r\n  if (isLoading) {\r\n    buttonElement.textContent = \"Сохранение...\";\r\n  } else {\r\n    buttonElement.textContent = \"Сохранить\";\r\n  }\r\n}\r\n"],"names":["config","baseUrl","headers","authorization","getResponseData","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","cardData","functionCard","idProfile","deleteCardCb","newCard","cloneNode","cardImage","cardDeleteButton","cardLikeButton","likeCount","idCard","textContent","name","likes","length","alt","src","link","id","createDeleteCard","fetch","method","then","data","console","log","message","deleteCard","addEventListener","classList","add","remove","forEach","element","_id","openCard","likeCard","event","openModal","elem","closeEsc","closeModal","removeEventListener","key","showInputError","formElement","inputElement","errorMessage","inputErrorClass","errorClass","errorElement","toggleButtonState","inputList","buttonElement","hasInvalidInput","disabled","some","validity","valid","checkInputValidity","patternMismatch","dataset","errorPattern","value","hideInputError","validationMessage","obj","handleSubmitConfirmPopup","a","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","Array","from","querySelectorAll","setEventListeners","cardContainer","forms","popupImage","imagePopup","imageCaption","changeAvatarPopup","editProfilePopup","profileTitle","profileImage","profileDescription","formChangeAvatar","changeAvatarUrl","formChangeAvatarButton","profilEditButton","formEditProfile","nameInput","jobInput","formEditProfileButton","popupDeleteCard","card","cardLink","cardCaption","target","contains","catch","err","likeCardApi","all","_ref","_ref2","profileObj","initialCards","about","style","backgroundImage","avatar","renderProfile","append","owner","clearValidation","evt","preventDefault","renderLoading","body","JSON","stringify","finally","reset","newCardPopup","formNewCard","cardName","cardUrl","formNewCardButton","isLoading","prepend","popup","currentTarget"],"sourceRoot":""}